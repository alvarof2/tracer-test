name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
          - goos: windows
            goarch: arm64
            suffix: windows-arm64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o tracer-test-${{ matrix.suffix }} .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tracer-test-${{ matrix.suffix }}
        path: tracer-test-${{ matrix.suffix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create checksums
      run: |
        cd artifacts
        for file in */tracer-test-*; do
          sha256sum "$file" > "$file.sha256"
        done

    - name: Get tag name
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        name: Release ${{ steps.get_tag.outputs.tag }}
        body: |
          ## Tracer Test ${{ steps.get_tag.outputs.tag }}
          
          HTTP Client with OTLP Tracing - A Go program that makes HTTP GET requests to a configurable URL and sends distributed traces via OpenTelemetry Protocol (OTLP).
          
          ### Features
          - HTTP GET requests with configurable intervals
          - OpenTelemetry (OTLP) distributed tracing
          - Structured JSON logging with configurable levels
          - Detailed network instrumentation (DNS, TCP, HTTP)
          - Automatic protocol detection (HTTP/HTTPS)
          - Health check endpoints (/health, /ready, /metrics)
          - Trace correlation in logs (trace ID and span ID)
          
          ### Downloads
          
          **Linux:**
          - `tracer-test-linux-amd64` - Linux x86_64
          - `tracer-test-linux-arm64` - Linux ARM64
          
          **macOS:**
          - `tracer-test-darwin-amd64` - macOS x86_64 (Intel)
          - `tracer-test-darwin-arm64` - macOS ARM64 (Apple Silicon)
          
          **Windows:**
          - `tracer-test-windows-amd64.exe` - Windows x86_64
          - `tracer-test-windows-arm64.exe` - Windows ARM64
          
          ### Usage
          
          ```bash
          # Basic usage
          ./tracer-test
          
          # Custom URL and interval
          ./tracer-test -url "https://api.example.com/data" -interval 10s
          
          # External OTLP endpoint with debug logging
          ./tracer-test -otlp-endpoint "https://your-otlp-endpoint.com" -log-level debug
          
          # Disable OTLP tracing for testing
          ./tracer-test -disable-otlp -log-format console
          ```
          
          ### Verification
          
          Verify the integrity of downloaded files using the provided SHA256 checksums:
          
          ```bash
          sha256sum -c tracer-test-<platform>.sha256
          ```
        files: |
          artifacts/*/tracer-test-*
          artifacts/*/tracer-test-*.sha256
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
